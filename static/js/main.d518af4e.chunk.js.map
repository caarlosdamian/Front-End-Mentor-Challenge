{"version":3,"sources":["images/pattern-hills.svg","images/bg-stars.svg","images/facebook.svg","images/instagram.svg","images/pinterest.svg","App.jsx","reportWebVitals.js","index.js"],"names":["App","useState","days","setDays","hours","setHours","minutes","setMinutes","seconds","setSeconds","counter","setCounter","useEffect","now","Date","difference","getTime","Math","floor","countdown","window","setInterval","className","src","Starts","alt","Facebook","Instagram","Pinterest","Hills","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,G,MAAA,IAA0B,2CCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,sCCA1B,MAA0B,sC,OC+E1BA,MAvEf,WACE,MAAwBC,mBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA8BJ,mBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA8BR,mBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KAoBA,OAJAC,qBAAU,YAfQ,WAChB,IAAMC,EAAM,IAAIC,KAEVC,EADU,IAAID,KAAK,wBAAwBE,UACpBH,EAEvBP,EAAUE,IACVJ,EAAQE,KACRJ,EAAOE,MACbD,EAAQc,KAAKC,MAAMH,EAAab,IAChCG,EAASY,KAAKC,MAAOH,EAAab,EAAQE,IAC1CG,EAAWU,KAAKC,MAAOH,EAAaX,EAASE,IAC7CG,EAAWQ,KAAKC,MAAOH,EAAaT,EAPpB,MAYhBa,KACC,CAACT,IACJU,OAAOC,aAAY,kBAAMV,EAAWD,EAAU,KAAI,KAEhD,qBAAKY,UAAU,MAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SACE,qBAAKC,IAAKC,EAAQC,IAAI,OAExB,8CACA,sBAAKH,UAAU,YAAf,UACE,gCACE,4BAAIpB,IACJ,yCAEF,gCACE,4BAAIE,IACJ,0CAEF,gCACE,4BAAIE,IACJ,4CAEF,gCACE,4BAAIE,IACJ,+CAGJ,qBAAKc,UAAU,UAAf,SACE,+BACE,6BACE,qBAAKC,IAAKG,EAAUD,IAAI,eAE1B,6BACE,qBAAKF,IAAKI,EAAWF,IAAI,gBAE3B,6BACE,qBAAKF,IAAKK,EAAWH,IAAI,oBAI/B,wBAAQH,UAAU,QAAlB,SACE,qBAAKC,IAAKM,EAAOJ,IAAI,kBC5DhBK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d518af4e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pattern-hills.815d688f.svg\";","export default __webpack_public_path__ + \"static/media/bg-stars.166881a1.svg\";","export default __webpack_public_path__ + \"static/media/facebook.a9208377.svg\";","export default __webpack_public_path__ + \"static/media/instagram.b94ff26a.svg\";","export default __webpack_public_path__ + \"static/media/pinterest.ea0db8e7.svg\";","import \"./App.css\";\nimport Hills from \"./images/pattern-hills.svg\";\nimport Starts from \"./images/bg-stars.svg\";\nimport Facebook from \"./images/facebook.svg\";\nimport Instagram from \"./images/instagram.svg\";\nimport Pinterest from \"./images/pinterest.svg\";\nimport { useEffect, useState } from \"react\";\n\nfunction App() {\n  const [days, setDays] = useState(0);\n  const [hours, setHours] = useState(0);\n  const [minutes, setMinutes] = useState(0);\n  const [seconds, setSeconds] = useState(0);\n  const [counter, setCounter] = useState(0);\n  const countdown = () => {\n    const now = new Date();\n    const endDate = new Date(\"Oct 08 2021 00:00:00\").getTime();\n    const difference = endDate - now;\n    const seconds = 1000;\n    const minutes = seconds * 60;\n    const hours = minutes * 60;\n    const days = hours * 24;\n    setDays(Math.floor(difference / days));\n    setHours(Math.floor((difference % days) / hours));\n    setMinutes(Math.floor((difference % hours) / minutes));\n    setSeconds(Math.floor((difference % minutes) / seconds));\n    return;\n  };\n\n  useEffect(() => {\n    countdown();\n  }, [counter]);\n  window.setInterval(() => setCounter(counter + 1), 1000);\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"starts\">\n          <img src={Starts} alt=\"\" />\n        </div>\n        <h1>Fly to Paris</h1>\n        <div className=\"countDown\">\n          <div>\n            <p>{days}</p>\n            <h3>Days</h3>\n          </div>\n          <div>\n            <p>{hours}</p>\n            <h3>Hours</h3>\n          </div>\n          <div>\n            <p>{minutes}</p>\n            <h3>Minutes</h3>\n          </div>\n          <div>\n            <p>{seconds}</p>\n            <h3>Seconds</h3>\n          </div>\n        </div>\n        <div className=\"socials\">\n          <ul>\n            <li>\n              <img src={Facebook} alt=\"Facebook\" />\n            </li>\n            <li>\n              <img src={Instagram} alt=\"Instagram\" />\n            </li>\n            <li>\n              <img src={Pinterest} alt=\"Pinteres\" />\n            </li>\n          </ul>\n        </div>\n        <footer className=\"hills\">\n          <img src={Hills} alt=\"hills\" />\n        </footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}